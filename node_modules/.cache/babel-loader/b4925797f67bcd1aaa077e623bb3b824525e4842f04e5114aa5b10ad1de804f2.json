{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayannah\\\\github\\\\lotrapi\\\\src\\\\Fellowship\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Characters from '../Characters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fellowship = () => {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  const [characterQuote, setCharacterQuote] = useState([]);\n  const [character, setCharacter] = useState([]);\n  useEffect(() => {\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\n    };\n    const getQuotes = async () => {\n      let data = await fetch('https://the-one-api.dev/v2/movie/5cd95395de30eff6ebccde5c/quote?limit=100', {\n        headers: headers\n      });\n      let quotes = await data.json();\n      let quoteData = quotes.docs;\n      setQuotes(quoteData);\n      // console.log(quoteData);\n    };\n\n    getQuotes();\n  }, []);\n  const handleClick = character => {\n    const selectedCharacterQuotes = quotes.find(quote => quote.character === character.id);\n\n    // Set the quotes for the selected character\n    if (selectedCharacterQuotes) {\n      setCharacterQuote(selectedCharacterQuotes.quote);\n    } else {\n      // Handle the case where no matching quotes were found for the character\n      setCharacterQuote('No quotes found for this character.');\n    }\n\n    // setCharacter(character.id)\n    console.log('you clicked ' + character.name);\n    console.log(selectedCharacterQuotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-1 text-center py-5\",\n      children: \"Click on a Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Characters, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Fellowship, \"K2ntEd4uTXP0IFshwzLo7YV2OKI=\");\n_c = Fellowship;\nexport default Fellowship;\n\n// const handleClick = (characterID, characterQuote) => {\n//   setCharacterQuote(characterQuote);\n//   if (characterID === characterFrodo.characterID) {\n//     console.log('frodoooo');\n//   } else if (characterID === characterSamwise.characterID) {\n//     console.log('sam');\n//   }\n// }\n\n// const handleClick = (character) => {\n//   setCharacter(character.id)\n//   console.log('you clicked ' + character.name)\n//   var element = document.getElementById(\"characterQuote\");\n//   element.classList.remove('visually-hidden')\n\n// }\nvar _c;\n$RefreshReg$(_c, \"Fellowship\");","map":{"version":3,"names":["useEffect","useState","Characters","jsxDEV","_jsxDEV","Fellowship","_s","quotes","setQuotes","characterQuote","setCharacterQuote","character","setCharacter","headers","getQuotes","data","fetch","json","quoteData","docs","handleClick","selectedCharacterQuotes","find","quote","id","console","log","name","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ayannah/github/lotrapi/src/Fellowship/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Characters from '../Characters';\r\n\r\nconst Fellowship = () => {\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [characterQuote, setCharacterQuote] = useState([]);\r\n\r\n  const [character, setCharacter] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const headers = {\r\n      'Accept': 'application/json',\r\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\r\n    }\r\n\r\n    const getQuotes = async () => {\r\n      let data = await fetch('https://the-one-api.dev/v2/movie/5cd95395de30eff6ebccde5c/quote?limit=100', {\r\n        headers: headers\r\n      });\r\n      let quotes = await data.json();\r\n      let quoteData = quotes.docs;\r\n      setQuotes(quoteData)\r\n      // console.log(quoteData);\r\n    }\r\n\r\n    getQuotes();\r\n  }, []);\r\n\r\n\r\n  const handleClick = (character) => {\r\n    const selectedCharacterQuotes = quotes.find(quote => quote.character === character.id);\r\n\r\n// Set the quotes for the selected character\r\nif (selectedCharacterQuotes) {\r\n  setCharacterQuote(selectedCharacterQuotes.quote);\r\n} else {\r\n  // Handle the case where no matching quotes were found for the character\r\n  setCharacterQuote('No quotes found for this character.');\r\n}\r\n\r\n\r\n\r\n    // setCharacter(character.id)\r\n    console.log('you clicked ' + character.name)\r\n    console.log(selectedCharacterQuotes)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-1 text-center py-5\">Click on a Character</h1>\r\n      <Characters onClick={handleClick} />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Fellowship;\r\n\r\n// const handleClick = (characterID, characterQuote) => {\r\n//   setCharacterQuote(characterQuote);\r\n//   if (characterID === characterFrodo.characterID) {\r\n//     console.log('frodoooo');\r\n//   } else if (characterID === characterSamwise.characterID) {\r\n//     console.log('sam');\r\n//   }\r\n// }\r\n\r\n\r\n// const handleClick = (character) => {\r\n//   setCharacter(character.id)\r\n//   console.log('you clicked ' + character.name)\r\n//   var element = document.getElementById(\"characterQuote\");\r\n//   element.classList.remove('visually-hidden')\r\n\r\n// }\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,kCAAkC;AACzC,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAG9CD,SAAS,CAAC,MAAM;IACd,MAAMa,OAAO,GAAG;MACd,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE;IACnB,CAAC;IAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAAC,2EAA2E,EAAE;QAClGH,OAAO,EAAEA;MACX,CAAC,CAAC;MACF,IAAIN,MAAM,GAAG,MAAMQ,IAAI,CAACE,IAAI,CAAC,CAAC;MAC9B,IAAIC,SAAS,GAAGX,MAAM,CAACY,IAAI;MAC3BX,SAAS,CAACU,SAAS,CAAC;MACpB;IACF,CAAC;;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMM,WAAW,GAAIT,SAAS,IAAK;IACjC,MAAMU,uBAAuB,GAAGd,MAAM,CAACe,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACZ,SAAS,KAAKA,SAAS,CAACa,EAAE,CAAC;;IAE1F;IACA,IAAIH,uBAAuB,EAAE;MAC3BX,iBAAiB,CAACW,uBAAuB,CAACE,KAAK,CAAC;IAClD,CAAC,MAAM;MACL;MACAb,iBAAiB,CAAC,qCAAqC,CAAC;IAC1D;;IAII;IACAe,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGf,SAAS,CAACgB,IAAI,CAAC;IAC5CF,OAAO,CAACC,GAAG,CAACL,uBAAuB,CAAC;EACtC,CAAC;EAED,oBACEjB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAIyB,SAAS,EAAC,4BAA4B;MAAAD,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpE7B,OAAA,CAACF,UAAU;MAACgC,OAAO,EAAEd;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAGV,CAAC;AAAA3B,EAAA,CApDKD,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAsDhB,eAAeA,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}