{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayannah\\\\github\\\\lotrapi\\\\src\\\\Fellowship\\\\index.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport Modal from 'react-bootstrap/Modal';\nimport { useEffect, useState } from 'react';\nimport Characters from '../Characters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fellowship = () => {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  const [characterQuote, setCharacterQuote] = useState('Fetching quote');\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\n    };\n    const getQuotes = async () => {\n      let data = await fetch('https://the-one-api.dev/v2/movie/5cd95395de30eff6ebccde5c/quote?character=5cd99d4bde30eff6ebccfc15', {\n        headers: headers\n      });\n      let quotes = await data.json();\n      let quoteData = quotes.docs;\n      setQuotes(quoteData);\n      // console.log(quoteData);\n    };\n\n    getQuotes();\n  }, []);\n  const handleClick = character => {\n    const clickedCharacterQuotes = quotes.find(quote => quote.character === character.id);\n    if (clickedCharacterQuotes) {\n      // Set the quotes for the selected character\n      setCharacterQuote(clickedCharacterQuotes.dialog); // set dialog to state\n      setModal(true);\n      // console.log(characterQuote)\n      // const characterQuotePara = document.getElementById('characterQuotePara') // get paragraph element from character component\n      //characterQuotePara.innerHTML = (characterQuote) // add character quote to paragraph\n    } else {\n      setCharacterQuote(character.name + ' had no lines in this film...');\n    }\n    // console.log(character.name + ': ' + characterQuote)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-1 text-center py-5\",\n      children: \"Click on a Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Characters, {\n      onClick: handleClick,\n      characterQuote: characterQuote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"sfwe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Modal.Dialog, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Modal title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Modal body text goes here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Fellowship, \"ktL0R+uCoGyjVtQV/qZO/orruKc=\");\n_c = Fellowship;\nexport default Fellowship;\n\n// const handleClick = (character) => {\n//   const characterQuotes = quotes.filter(quote => quote.character === character.id);\n\n//   if (characterQuotes.length > 0) {\n// Generate a random index for the quotes\n//     const randomIndex = Math.floor(Math.random() * characterQuotes.length);\n//     const randomQuote = characterQuotes[randomIndex].dialog;\n//     setCharacterQuote(randomQuote);\n//   } else {\n//     setCharacterQuote(character.name + ' had no lines in this film...');\n//   }\n\n//   console.log(character.name + ': ' + characterQuote);\n// }\nvar _c;\n$RefreshReg$(_c, \"Fellowship\");","map":{"version":3,"names":["Modal","useEffect","useState","Characters","jsxDEV","_jsxDEV","Fellowship","_s","quotes","setQuotes","characterQuote","setCharacterQuote","modal","setModal","headers","getQuotes","data","fetch","json","quoteData","docs","handleClick","character","clickedCharacterQuotes","find","quote","id","dialog","name","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Dialog","Header","closeButton","Title","Body","Footer","Button","variant","_c","$RefreshReg$"],"sources":["C:/Users/Ayannah/github/lotrapi/src/Fellowship/index.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\r\n// import 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useEffect, useState } from 'react'\r\nimport Characters from '../Characters';\r\n\r\n\r\nconst Fellowship = () => {\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [characterQuote, setCharacterQuote] = useState('Fetching quote');\r\n  const [modal, setModal] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const headers = {\r\n      'Accept': 'application/json',\r\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\r\n    }\r\n\r\n    const getQuotes = async () => {\r\n      let data = await fetch('https://the-one-api.dev/v2/movie/5cd95395de30eff6ebccde5c/quote?character=5cd99d4bde30eff6ebccfc15', {\r\n        headers: headers\r\n      });\r\n      let quotes = await data.json();\r\n      let quoteData = quotes.docs;\r\n      setQuotes(quoteData)\r\n      // console.log(quoteData);\r\n    }\r\n\r\n    getQuotes();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const handleClick = (character) => {\r\n    const clickedCharacterQuotes = quotes.find(quote => quote.character === character.id)\r\n\r\n    if (clickedCharacterQuotes) { // Set the quotes for the selected character\r\n      setCharacterQuote(clickedCharacterQuotes.dialog) // set dialog to state\r\n      setModal(true)\r\n      // console.log(characterQuote)\r\n     // const characterQuotePara = document.getElementById('characterQuotePara') // get paragraph element from character component\r\n      //characterQuotePara.innerHTML = (characterQuote) // add character quote to paragraph\r\n\r\n     \r\n\r\n    } else {\r\n      setCharacterQuote(character.name + ' had no lines in this film...');\r\n    }\r\n    // console.log(character.name + ': ' + characterQuote)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-1 text-center py-5\">Click on a Character</h1>\r\n      <Characters onClick={handleClick} characterQuote={characterQuote} />\r\n      \r\n<h1>sfwe</h1>\r\n<div>\r\n<Modal.Dialog>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal title</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <p>Modal body text goes here.</p>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\">Close</Button>\r\n          <Button variant=\"primary\">Save changes</Button>\r\n        </Modal.Footer>\r\n      </Modal.Dialog>\r\n    </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Fellowship;\r\n\r\n\r\n// const handleClick = (character) => {\r\n//   const characterQuotes = quotes.filter(quote => quote.character === character.id);\r\n\r\n//   if (characterQuotes.length > 0) {\r\n// Generate a random index for the quotes\r\n//     const randomIndex = Math.floor(Math.random() * characterQuotes.length);\r\n//     const randomQuote = characterQuotes[randomIndex].dialog;\r\n//     setCharacterQuote(randomQuote);\r\n//   } else {\r\n//     setCharacterQuote(character.name + ' had no lines in this film...');\r\n//   }\r\n\r\n//   console.log(character.name + ': ' + characterQuote);\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}