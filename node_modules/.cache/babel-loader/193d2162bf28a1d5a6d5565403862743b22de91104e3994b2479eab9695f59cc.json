{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayannah\\\\github\\\\lotrapi\\\\src\\\\Display\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GetAllFilms = (films, setFilms) => {\n  _s();\n  useEffect(() => {\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\n    };\n    const getFilms = async () => {\n      let data = await fetch('https://the-one-api.dev/v2/movie', {\n        headers: headers\n      });\n      let films = await data.json();\n      let filmData = films.docs;\n      setFilms(filmData);\n      console.log(filmData);\n    };\n    getFilms();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(GetAllFilms, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GetAllFilms;\nexport default GetAllFilms;\nvar _c;\n$RefreshReg$(_c, \"GetAllFilms\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","GetAllFilms","films","setFilms","_s","headers","getFilms","data","fetch","json","filmData","docs","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ayannah/github/lotrapi/src/Display/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nconst GetAllFilms = (films, setFilms) => {\r\n\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        const headers = {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\r\n          }\r\n\r\n        const getFilms = async () => {\r\n            let data = await fetch('https://the-one-api.dev/v2/movie', {\r\n              headers: headers\r\n            })\r\n            let films = await data.json()\r\n            let filmData = films.docs \r\n            setFilms(filmData)\r\n            console.log(filmData)\r\n        }\r\n        \r\n        getFilms()\r\n        \r\n    }, [])\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          {/* {films.map((film) => (\r\n        <p>{film.name}</p>\r\n      ))} */}\r\n    </div>\r\n\r\n      </>\r\n    )\r\n}\r\n\r\nexport default GetAllFilms;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EAIrCT,SAAS,CAAC,MAAM;IAEZ,MAAMU,OAAO,GAAG;MACZ,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE;IACnB,CAAC;IAEH,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QACzDH,OAAO,EAAEA;MACX,CAAC,CAAC;MACF,IAAIH,KAAK,GAAG,MAAMK,IAAI,CAACE,IAAI,CAAC,CAAC;MAC7B,IAAIC,QAAQ,GAAGR,KAAK,CAACS,IAAI;MACzBR,QAAQ,CAACO,QAAQ,CAAC;MAClBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACzB,CAAC;IAEDJ,QAAQ,CAAC,CAAC;EAEd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIC;EAAC,gBAEF,CAAC;AAET,CAAC;AAAAd,EAAA,CAnCKH,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AAqCjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}