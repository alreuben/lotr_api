{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayannah\\\\github\\\\lotrapi\\\\src\\\\Film\\\\index.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router\";\nimport Characters from '../Characters';\nimport Nav from \"../Nav\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Film = _ref => {\n  _s();\n  let {\n    film,\n    setFilm\n  } = _ref;\n  const [quotes, setQuotes] = useState([]);\n  const [characterQuote, setCharacterQuote] = useState('');\n  const [characterName, setCharacterName] = useState('');\n  const navigate = useNavigate();\n  if (film === '') {\n    navigate('/');\n  }\n  useEffect(() => {\n    const headers = {\n      Accept: 'application/json',\n      Authorization: 'Bearer 36H_uSF2UL6WB97Foiob'\n    };\n    const getQuotes = async () => {\n      let movieId;\n      if (film === '5cd95395de30eff6ebccde5c') {\n        movieId = '5cd95395de30eff6ebccde5c';\n      } else if (film === '5cd95395de30eff6ebccde5b') {\n        movieId = '5cd95395de30eff6ebccde5b';\n      } else {\n        movieId = '5cd95395de30eff6ebccde5d';\n      }\n      let data = await fetch(`https://the-one-api.dev/v2/movie/${movieId}/quote`, {\n        headers: headers\n      });\n      let quotes = await data.json();\n      let quoteData = quotes.docs;\n      setQuotes(quoteData);\n    };\n    getQuotes();\n  }, [film]);\n  const handleClick = character => {\n    const characterQuotes = quotes.filter(quote => quote.character === character.id);\n    if (characterQuotes.length > 0) {\n      const randomIndex = Math.floor(Math.random() * characterQuotes.length);\n      const randomQuote = characterQuotes[randomIndex].dialog;\n      setCharacterQuote(randomQuote);\n      setCharacterName(character.name);\n      setShowCharacterQuote(true);\n    } else {\n      setCharacterQuote(`${character.name} had no lines in this film.`);\n      setCharacterName(character.name);\n      setShowCharacterQuote(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#222315'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-1 text-center py-5\",\n      children: \"Click on a Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Characters, {\n      onClick: handleClick,\n      characterQuote: characterQuote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), showCharacterQuote && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-absolute top-50 start-50 translate-middle p-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"paraName\",\n        className: \"text-center px-5\",\n        children: characterName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"paraQuote\",\n        className: \"text-center px-5\",\n        children: characterQuote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Film, \"vtC9ViGUnNWxfkfIgycWE94SHPY=\", false, function () {\n  return [useNavigate];\n});\n_c = Film;\nexport default Film;\nvar _c;\n$RefreshReg$(_c, \"Film\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Characters","Nav","jsxDEV","_jsxDEV","Film","_ref","_s","film","setFilm","quotes","setQuotes","characterQuote","setCharacterQuote","characterName","setCharacterName","navigate","headers","Accept","Authorization","getQuotes","movieId","data","fetch","json","quoteData","docs","handleClick","character","characterQuotes","filter","quote","id","length","randomIndex","Math","floor","random","randomQuote","dialog","name","setShowCharacterQuote","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","showCharacterQuote","_c","$RefreshReg$"],"sources":["C:/Users/Ayannah/github/lotrapi/src/Film/index.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js'\r\nimport { useEffect, useState } from 'react'\r\nimport {useNavigate} from \"react-router\"\r\nimport Characters from '../Characters'\r\nimport Nav from \"../Nav\"\r\nimport './styles.css'\r\n\r\nconst Film = ({ film, setFilm }) => {\r\n\r\n  const [quotes, setQuotes] = useState([])\r\n  const [characterQuote, setCharacterQuote] = useState('')\r\n  const [characterName, setCharacterName] = useState('')\r\n  const navigate = useNavigate()\r\n\r\n  if (film === '') {\r\n    navigate('/');\r\n  }\r\n\r\n  useEffect(() => {\r\n    const headers = {\r\n      Accept: 'application/json',\r\n      Authorization: 'Bearer 36H_uSF2UL6WB97Foiob',\r\n    };\r\n\r\n    const getQuotes = async () => {\r\n      let movieId;\r\n      if (film === '5cd95395de30eff6ebccde5c') {\r\n        movieId = '5cd95395de30eff6ebccde5c';\r\n      } else if (film === '5cd95395de30eff6ebccde5b') {\r\n        movieId = '5cd95395de30eff6ebccde5b';\r\n      } else {\r\n        movieId = '5cd95395de30eff6ebccde5d';\r\n      }\r\n\r\n      let data = await fetch(`https://the-one-api.dev/v2/movie/${movieId}/quote`, {\r\n        headers: headers,\r\n      });\r\n      let quotes = await data.json();\r\n      let quoteData = quotes.docs;\r\n      setQuotes(quoteData);\r\n    };\r\n\r\n    getQuotes();\r\n  }, [film]);\r\n\r\n  const handleClick = (character) => {\r\n    const characterQuotes = quotes.filter((quote) => quote.character === character.id);\r\n\r\n    if (characterQuotes.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * characterQuotes.length);\r\n      const randomQuote = characterQuotes[randomIndex].dialog;\r\n      setCharacterQuote(randomQuote);\r\n      setCharacterName(character.name);\r\n      setShowCharacterQuote(true);\r\n    } else {\r\n      setCharacterQuote(`${character.name} had no lines in this film.`);\r\n      setCharacterName(character.name);\r\n      setShowCharacterQuote(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#222315' }}>\r\n      <Nav />\r\n      <h1 className=\"display-1 text-center py-5\">Click on a Character</h1>\r\n      <Characters onClick={handleClick} characterQuote={characterQuote} />\r\n      {showCharacterQuote && (\r\n        <div className=\"position-absolute top-50 start-50 translate-middle p-10\">\r\n          <p id=\"paraName\" className=\"text-center px-5\">\r\n            {characterName}\r\n          </p>\r\n          <p id=\"paraQuote\" className=\"text-center px-5\">\r\n            {characterQuote}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Film;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}