{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayannah\\\\github\\\\lotrapi\\\\src\\\\Fellowship\\\\index.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/js/bootstrap.bundle.min.js';\n\nimport { useEffect, useState } from 'react';\nimport Characters from '../Characters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fellowship = () => {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  const [characterQuote, setCharacterQuote] = useState('Fetching quote');\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\n    };\n    const getQuotes = async () => {\n      let data = await fetch('https://the-one-api.dev/v2/movie/5cd95395de30eff6ebccde5c/quote?character=5cd99d4bde30eff6ebccfc15', {\n        headers: headers\n      });\n      let quotes = await data.json();\n      let quoteData = quotes.docs;\n      setQuotes(quoteData);\n      // console.log(quoteData);\n    };\n\n    getQuotes();\n  }, []);\n  const handleClick = character => {\n    const clickedCharacterQuotes = quotes.find(quote => quote.character === character.id);\n    if (clickedCharacterQuotes) {\n      // Set the quotes for the selected character\n      setCharacterQuote(clickedCharacterQuotes.dialog); // set dialog to state\n      // setModal(true)\n      // console.log(characterQuote)\n      // const characterQuotePara = document.getElementById('characterQuotePara') // get paragraph element from character component\n      //characterQuotePara.innerHTML = (characterQuote) // add character quote to paragraph\n    } else {\n      setCharacterQuote(character.name + ' had no lines in this film...');\n    }\n    // console.log(character.name + ': ' + characterQuote)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-1 text-center py-5\",\n      children: \"Click on a Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Characters, {\n      onClick: handleClick,\n      characterQuote: characterQuote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#myModal\",\n      children: \"Open modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      claclassNamess: \"modal\",\n      id: \"myModal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"modal-title\",\n              children: \"Modal Heading\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              \"data-bs-dismiss\": \"modal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: \"Modal body..\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Fellowship, \"ktL0R+uCoGyjVtQV/qZO/orruKc=\");\n_c = Fellowship;\nexport default Fellowship;\n\n// const handleClick = (character) => {\n//   const characterQuotes = quotes.filter(quote => quote.character === character.id);\n\n//   if (characterQuotes.length > 0) {\n// Generate a random index for the quotes\n//     const randomIndex = Math.floor(Math.random() * characterQuotes.length);\n//     const randomQuote = characterQuotes[randomIndex].dialog;\n//     setCharacterQuote(randomQuote);\n//   } else {\n//     setCharacterQuote(character.name + ' had no lines in this film...');\n//   }\n\n//   console.log(character.name + ': ' + characterQuote);\n// }\nvar _c;\n$RefreshReg$(_c, \"Fellowship\");","map":{"version":3,"names":["useEffect","useState","Characters","jsxDEV","_jsxDEV","Fellowship","_s","quotes","setQuotes","characterQuote","setCharacterQuote","modal","setModal","headers","getQuotes","data","fetch","json","quoteData","docs","handleClick","character","clickedCharacterQuotes","find","quote","id","dialog","name","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","claclassNamess","_c","$RefreshReg$"],"sources":["C:/Users/Ayannah/github/lotrapi/src/Fellowship/index.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\r\n// import 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport Characters from '../Characters';\r\n\r\n\r\nconst Fellowship = () => {\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [characterQuote, setCharacterQuote] = useState('Fetching quote');\r\n  const [modal, setModal] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    const headers = {\r\n      'Accept': 'application/json',\r\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\r\n    }\r\n\r\n    const getQuotes = async () => {\r\n      let data = await fetch('https://the-one-api.dev/v2/movie/5cd95395de30eff6ebccde5c/quote?character=5cd99d4bde30eff6ebccfc15', {\r\n        headers: headers\r\n      });\r\n      let quotes = await data.json();\r\n      let quoteData = quotes.docs;\r\n      setQuotes(quoteData)\r\n      // console.log(quoteData);\r\n    }\r\n\r\n    getQuotes();\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  const handleClick = (character) => {\r\n    const clickedCharacterQuotes = quotes.find(quote => quote.character === character.id)\r\n\r\n    if (clickedCharacterQuotes) { // Set the quotes for the selected character\r\n      setCharacterQuote(clickedCharacterQuotes.dialog) // set dialog to state\r\n      // setModal(true)\r\n      // console.log(characterQuote)\r\n     // const characterQuotePara = document.getElementById('characterQuotePara') // get paragraph element from character component\r\n      //characterQuotePara.innerHTML = (characterQuote) // add character quote to paragraph\r\n\r\n     \r\n\r\n    } else {\r\n      setCharacterQuote(character.name + ' had no lines in this film...');\r\n    }\r\n    // console.log(character.name + ': ' + characterQuote)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-1 text-center py-5\">Click on a Character</h1>\r\n      <Characters onClick={handleClick} characterQuote={characterQuote} />\r\n      \r\n<h1>Quote</h1>\r\n<button type=\"button\" className=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#myModal\">\r\n    Open modal\r\n  </button>\r\n\r\n  <div claclassNamess=\"modal\" id=\"myModal\">\r\n  <div className=\"modal-dialog\">\r\n    <div className=\"modal-content\">\r\n\r\n      {/* <!-- Modal Header --> */}\r\n      <div className=\"modal-header\">\r\n        <h4 className=\"modal-title\">Modal Heading</h4>\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n      </div>\r\n\r\n      {/* <!-- Modal body --> */}\r\n      <div className=\"modal-body\">\r\n        Modal body..\r\n      </div>\r\n\r\n    \r\n\r\n    </div>\r\n  </div>\r\n\r\n    </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Fellowship;\r\n\r\n\r\n// const handleClick = (character) => {\r\n//   const characterQuotes = quotes.filter(quote => quote.character === character.id);\r\n\r\n//   if (characterQuotes.length > 0) {\r\n// Generate a random index for the quotes\r\n//     const randomIndex = Math.floor(Math.random() * characterQuotes.length);\r\n//     const randomQuote = characterQuotes[randomIndex].dialog;\r\n//     setCharacterQuote(randomQuote);\r\n//   } else {\r\n//     setCharacterQuote(character.name + ' had no lines in this film...');\r\n//   }\r\n\r\n//   console.log(character.name + ': ' + characterQuote);\r\n// }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}