{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayannah\\\\github\\\\lotrapi\\\\src\\\\Fellowship\\\\index.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport frodo from '../images/frodo.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fellowship = () => {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  const [characterQuote, setCharacterQuote] = useState('');\n  useEffect(() => {\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\n    };\n    const getQuotes = async () => {\n      let data = await fetch('https://the-one-api.dev/v2/movie/5cd95395de30eff6ebccde5c/quote?limit=100', {\n        headers: headers\n      });\n      let quotes = await data.json();\n      let quoteData = quotes.docs;\n      setQuotes(quoteData);\n      console.log(quoteData);\n    };\n    getQuotes();\n  }, []);\n  const characterFrodo = {\n    characterID: '5cd99d4bde30eff6ebccfc15',\n    name: 'Frodo Baggins',\n    image: 'https://static.wikia.nocookie.net/lotr/images/3/32/Frodo_%28FotR%29.png/revision/latest?cb=20221006065757'\n  };\n  const handleClick = (characterID, characterQuote) => {\n    setCharacterQuote(characterQuote);\n    if (characterID === characterFrodo.characterID) {\n      console.log('{quote._id}');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: quotes.map(quote => /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"img-thumbnail\",\n      src: characterFrodo.image,\n      onClick: () => handleClick(quote.character, quote.text)\n    }, quote._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Fellowship, \"CZkbEuNntCBTpr7xqzugJO2WjOI=\");\n_c = Fellowship;\nexport default Fellowship;\nvar _c;\n$RefreshReg$(_c, \"Fellowship\");","map":{"version":3,"names":["Link","useEffect","useState","frodo","jsxDEV","_jsxDEV","Fellowship","_s","quotes","setQuotes","characterQuote","setCharacterQuote","headers","getQuotes","data","fetch","json","quoteData","docs","console","log","characterFrodo","characterID","name","image","handleClick","children","map","quote","className","src","onClick","character","text","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ayannah/github/lotrapi/src/Fellowship/index.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport frodo from '../images/frodo.jpg'\r\n\r\nconst Fellowship = () => {\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [characterQuote, setCharacterQuote] = useState('');\r\n    \r\n  useEffect(() => {\r\n    const headers = {\r\n      'Accept': 'application/json',\r\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\r\n    }\r\n\r\n    const getQuotes = async () => {\r\n      let data = await fetch('https://the-one-api.dev/v2/movie/5cd95395de30eff6ebccde5c/quote?limit=100', {\r\n        headers: headers\r\n      });\r\n      let quotes = await data.json();\r\n      let quoteData = quotes.docs;\r\n      setQuotes(quoteData)\r\n      console.log(quoteData);\r\n    }\r\n      \r\n    getQuotes();\r\n  }, []);\r\n\r\n  const characterFrodo = {\r\n    characterID: '5cd99d4bde30eff6ebccfc15',\r\n    name: 'Frodo Baggins',\r\n    image: 'https://static.wikia.nocookie.net/lotr/images/3/32/Frodo_%28FotR%29.png/revision/latest?cb=20221006065757'\r\n  }\r\n   \r\n  const handleClick = (characterID, characterQuote) => {\r\n    setCharacterQuote(characterQuote);\r\n    if (characterID === characterFrodo.characterID) {\r\n      console.log('{quote._id}');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {quotes.map((quote) => (\r\n        <img\r\n          className=\"img-thumbnail\"\r\n          src={characterFrodo.image}\r\n          key={quote._id}\r\n          onClick={() => handleClick(quote.character, quote.text)}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Fellowship;\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,kCAAkC;AACzC,OAAOC,KAAK,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAG;MACd,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE;IACnB,CAAC;IAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAAC,2EAA2E,EAAE;QAClGH,OAAO,EAAEA;MACX,CAAC,CAAC;MACF,IAAIJ,MAAM,GAAG,MAAMM,IAAI,CAACE,IAAI,CAAC,CAAC;MAC9B,IAAIC,SAAS,GAAGT,MAAM,CAACU,IAAI;MAC3BT,SAAS,CAACQ,SAAS,CAAC;MACpBE,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;IACxB,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,cAAc,GAAG;IACrBC,WAAW,EAAE,0BAA0B;IACvCC,IAAI,EAAE,eAAe;IACrBC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,WAAW,GAAGA,CAACH,WAAW,EAAEZ,cAAc,KAAK;IACnDC,iBAAiB,CAACD,cAAc,CAAC;IACjC,IAAIY,WAAW,KAAKD,cAAc,CAACC,WAAW,EAAE;MAC9CH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC5B;EACF,CAAC;EAED,oBACEf,OAAA;IAAAqB,QAAA,EACGlB,MAAM,CAACmB,GAAG,CAAEC,KAAK,iBAChBvB,OAAA;MACEwB,SAAS,EAAC,eAAe;MACzBC,GAAG,EAAET,cAAc,CAACG,KAAM;MAE1BO,OAAO,EAAEA,CAAA,KAAMN,WAAW,CAACG,KAAK,CAACI,SAAS,EAAEJ,KAAK,CAACK,IAAI;IAAE,GADnDL,KAAK,CAACM,GAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAA/B,EAAA,CAhDKD,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAkDhB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}