{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayannah\\\\github\\\\lotrapi\\\\src\\\\Fellowship\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Characters from '../Characters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fellowship = () => {\n  _s();\n  const [quotes, setQuotes] = useState([]);\n  const [characterQuote, setCharacterQuote] = useState('Fetching quote');\n  const [character, setCharacter] = useState([]);\n  useEffect(() => {\n    const headers = {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\n    };\n    const getQuotes = async () => {\n      let data = await fetch('https://the-one-api.dev/v2/movie/5cd95395de30eff6ebccde5c/quote?character=5cd99d4bde30eff6ebccfc15', {\n        headers: headers\n      });\n      let quotes = await data.json();\n      let quoteData = quotes.docs;\n      setQuotes(quoteData);\n      console.log(quoteData);\n    };\n    getQuotes();\n  }, []);\n  const handleClick = character => {\n    const clickedCharacterQuotes = quotes.find(quote => quote.character === character.id);\n    // const characterQuotePara = getElementById('characterQuotePara')\n\n    //! Set the quotes for the selected character\n    if (clickedCharacterQuotes) {\n      document.getElementById('characterQuotePara').\n      // const quoteParagraph = document.createElement(\"p\") //create para\n      setCharacterQuote(clickedCharacterQuotes.dialog); // set dialog to state\n\n      console.log(characterQuote);\n      if (characterQuotePara) document.getElementById('cardBody').appendChild(quoteParagraph); // append para to card\n      quoteParagraph.innerHTML = characterQuote;\n      quoteParagraph.innerHTML = characterQuote;\n    } else {\n      setCharacterQuote(character.name + ' had no lines in this film...');\n    }\n    // console.log(character.name + ': ' + characterQuote)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-1 text-center py-5\",\n      children: \"Click on a Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Characters, {\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Fellowship, \"kTwc5abpAKKXBCYqVhBS2tflWd4=\");\n_c = Fellowship;\nexport default Fellowship;\n\n// const handleClick = (character) => {\n//   const characterQuotes = quotes.filter(quote => quote.character === character.id);\n\n//   if (characterQuotes.length > 0) {\n// Generate a random index for the quotes\n//     const randomIndex = Math.floor(Math.random() * characterQuotes.length);\n//     const randomQuote = characterQuotes[randomIndex].dialog;\n//     setCharacterQuote(randomQuote);\n//   } else {\n//     setCharacterQuote(character.name + ' had no lines in this film...');\n//   }\n\n//   console.log(character.name + ': ' + characterQuote);\n// }\nvar _c;\n$RefreshReg$(_c, \"Fellowship\");","map":{"version":3,"names":["useEffect","useState","Characters","jsxDEV","_jsxDEV","Fellowship","_s","quotes","setQuotes","characterQuote","setCharacterQuote","character","setCharacter","headers","getQuotes","data","fetch","json","quoteData","docs","console","log","handleClick","clickedCharacterQuotes","find","quote","id","document","getElementById","dialog","characterQuotePara","appendChild","quoteParagraph","innerHTML","name","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ayannah/github/lotrapi/src/Fellowship/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Characters from '../Characters';\r\n\r\nconst Fellowship = () => {\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [characterQuote, setCharacterQuote] = useState('Fetching quote');\r\n  const [character, setCharacter] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const headers = {\r\n      'Accept': 'application/json',\r\n      'Authorization': 'Bearer 36H_uSF2UL6WB97Foiob'\r\n    }\r\n\r\n    const getQuotes = async () => {\r\n      let data = await fetch('https://the-one-api.dev/v2/movie/5cd95395de30eff6ebccde5c/quote?character=5cd99d4bde30eff6ebccfc15', {\r\n        headers: headers\r\n      });\r\n      let quotes = await data.json();\r\n      let quoteData = quotes.docs;\r\n      setQuotes(quoteData)\r\n      console.log(quoteData);\r\n    }\r\n\r\n    getQuotes();\r\n  }, []);\r\n\r\n\r\n  const handleClick = (character) => {\r\n    const clickedCharacterQuotes = quotes.find(quote => quote.character === character.id)\r\n    // const characterQuotePara = getElementById('characterQuotePara')\r\n    \r\n\r\n    //! Set the quotes for the selected character\r\n    if (clickedCharacterQuotes) {\r\n      document.getElementById('characterQuotePara').\r\n      // const quoteParagraph = document.createElement(\"p\") //create para\r\n      setCharacterQuote(clickedCharacterQuotes.dialog) // set dialog to state\r\n\r\n   \r\n         console.log(characterQuote)\r\n\r\n\r\n    \r\n     \r\n      if (characterQuotePara)\r\n      document.getElementById('cardBody').appendChild(quoteParagraph); // append para to card\r\n      quoteParagraph.innerHTML = (characterQuote)\r\n      \r\n\r\n      quoteParagraph.innerHTML = (characterQuote);\r\n    } else {\r\n      setCharacterQuote(character.name + ' had no lines in this film...');\r\n    }\r\n    // console.log(character.name + ': ' + characterQuote)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-1 text-center py-5\">Click on a Character</h1>\r\n      <Characters onClick={handleClick} />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Fellowship;\r\n\r\n\r\n// const handleClick = (character) => {\r\n//   const characterQuotes = quotes.filter(quote => quote.character === character.id);\r\n\r\n//   if (characterQuotes.length > 0) {\r\n// Generate a random index for the quotes\r\n//     const randomIndex = Math.floor(Math.random() * characterQuotes.length);\r\n//     const randomQuote = characterQuotes[randomIndex].dialog;\r\n//     setCharacterQuote(randomQuote);\r\n//   } else {\r\n//     setCharacterQuote(character.name + ' had no lines in this film...');\r\n//   }\r\n\r\n//   console.log(character.name + ': ' + characterQuote);\r\n// }\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,kCAAkC;AACzC,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,gBAAgB,CAAC;EACtE,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAG9CD,SAAS,CAAC,MAAM;IACd,MAAMa,OAAO,GAAG;MACd,QAAQ,EAAE,kBAAkB;MAC5B,eAAe,EAAE;IACnB,CAAC;IAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAAC,oGAAoG,EAAE;QAC3HH,OAAO,EAAEA;MACX,CAAC,CAAC;MACF,IAAIN,MAAM,GAAG,MAAMQ,IAAI,CAACE,IAAI,CAAC,CAAC;MAC9B,IAAIC,SAAS,GAAGX,MAAM,CAACY,IAAI;MAC3BX,SAAS,CAACU,SAAS,CAAC;MACpBE,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;IACxB,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMQ,WAAW,GAAIX,SAAS,IAAK;IACjC,MAAMY,sBAAsB,GAAGhB,MAAM,CAACiB,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACd,SAAS,KAAKA,SAAS,CAACe,EAAE,CAAC;IACrF;;IAGA;IACA,IAAIH,sBAAsB,EAAE;MAC1BI,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;MAC7C;MACAlB,iBAAiB,CAACa,sBAAsB,CAACM,MAAM,CAAC,EAAC;;MAG9CT,OAAO,CAACC,GAAG,CAACZ,cAAc,CAAC;MAK9B,IAAIqB,kBAAkB,EACtBH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACG,WAAW,CAACC,cAAc,CAAC,CAAC,CAAC;MACjEA,cAAc,CAACC,SAAS,GAAIxB,cAAe;MAG3CuB,cAAc,CAACC,SAAS,GAAIxB,cAAe;IAC7C,CAAC,MAAM;MACLC,iBAAiB,CAACC,SAAS,CAACuB,IAAI,GAAG,+BAA+B,CAAC;IACrE;IACA;EACF,CAAC;;EAmBD,oBACE9B,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAIgC,SAAS,EAAC,4BAA4B;MAAAD,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpEpC,OAAA,CAACF,UAAU;MAACuC,OAAO,EAAEnB;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAGV,CAAC;AAAAlC,EAAA,CA/EKD,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAiFhB,eAAeA,UAAU;;AAGzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}